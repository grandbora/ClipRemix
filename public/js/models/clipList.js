// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'models/base/collection', 'models/clip', 'models/resultList'], function(Chaplin, Collection, Clip, ResultList) {
  'use strict';

  var ClipList;
  return ClipList = (function(_super) {

    __extends(ClipList, _super);

    function ClipList() {
      this.load = __bind(this.load, this);
      return ClipList.__super__.constructor.apply(this, arguments);
    }

    ClipList.prototype.model = Clip;

    ClipList.prototype.initialize = function() {
      return ClipList.__super__.initialize.apply(this, arguments);
    };

    ClipList.prototype.load = function() {
      var _this = this;
      return $.ajax('/load', {
        type: 'GET',
        dataType: 'json',
        error: function(jqXHR, textStatus, errorThrown) {
          return alert('some kind of error somewhere, useful info ehh (LOAD)?');
        },
        success: function(data, textStatus, jqXHR) {
          return _.each(data, function(val, key) {
            var resultList;
            resultList = new ResultList(val);
            return _this.add({
              name: key,
              collection: resultList
            });
          });
        }
      });
    };

    return ClipList;

  })(Collection);
});
