// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'views/base/view', 'views/resultSaved', 'text!templates/save.hbs'], function(Chaplin, BaseView, ResultSavedView, template) {
  'use strict';

  var SaveView;
  return SaveView = (function(_super) {

    __extends(SaveView, _super);

    function SaveView() {
      this.saveList = __bind(this.saveList, this);

      this.showSave = __bind(this.showSave, this);

      this.addResult = __bind(this.addResult, this);

      this.itemDropped = __bind(this.itemDropped, this);

      this.makeDroppable = __bind(this.makeDroppable, this);

      this.render = __bind(this.render, this);
      return SaveView.__super__.constructor.apply(this, arguments);
    }

    SaveView.prototype.template = template;

    template = null;

    SaveView.prototype.tagName = 'div';

    SaveView.prototype.id = 'save';

    SaveView.prototype.autoRender = true;

    SaveView.prototype.container = 'body .content';

    SaveView.prototype.initialize = function(options) {
      SaveView.__super__.initialize.apply(this, arguments);
      this.resultList = options.resultList;
      this.makeDroppable();
      this.delegate('drop', '', this.itemDropped);
      this.delegate('click', '.control .saveButton', this.saveList);
      this.modelBind('add', this.addResult);
      return this.modelBind('add', this.showSave);
    };

    SaveView.prototype.render = function() {
      SaveView.__super__.render.apply(this, arguments);
      return this.$el.addClass("save horizontal");
    };

    SaveView.prototype.makeDroppable = function() {
      return this.$el.droppable({
        activeClass: "ui-state-hover",
        hoverClass: "ui-state-active"
      });
    };

    SaveView.prototype.itemDropped = function(e, ui) {
      var id, result;
      id = ui.draggable.attr('id');
      result = this.resultList.getByCid(id);
      this.resultList.remove(result);
      return this.collection.add(result);
    };

    SaveView.prototype.addResult = function(result, saveList, index) {
      return new ResultSavedView({
        model: result,
        id: result.cid,
        className: 'result'
      });
    };

    SaveView.prototype.showSave = function(result, saveList, index) {
      var drag, save;
      drag = this.$el.find('.control .dragButton');
      drag.hide();
      save = this.$el.find('.control .saveButton');
      return save.show();
    };

    SaveView.prototype.saveList = function() {
      return this.collection.save();
    };

    return SaveView;

  })(BaseView);
});
