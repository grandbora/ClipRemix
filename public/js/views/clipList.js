// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'views/base/view', 'views/clip'], function(Chaplin, BaseView, ClipView) {
  'use strict';

  var ClipListView;
  return ClipListView = (function(_super) {
    var template;

    __extends(ClipListView, _super);

    function ClipListView() {
      this.clipAdded = __bind(this.clipAdded, this);

      this.render = __bind(this.render, this);
      return ClipListView.__super__.constructor.apply(this, arguments);
    }

    ClipListView.prototype.template = "";

    template = null;

    ClipListView.prototype.tagName = 'div';

    ClipListView.prototype.autoRender = true;

    ClipListView.prototype.container = '.content';

    ClipListView.prototype.initialize = function() {
      ClipListView.__super__.initialize.apply(this, arguments);
      return this.modelBind('add', this.clipAdded);
    };

    ClipListView.prototype.render = function() {
      return ClipListView.__super__.render.apply(this, arguments);
    };

    ClipListView.prototype.clipAdded = function(clip, clipList, index) {
      return new ClipView({
        model: clip,
        id: clip.cid,
        className: "clip horizontal"
      });
    };

    return ClipListView;

  })(BaseView);
});
